name: Build and deploy ASP.Net Core app to Azure Web App - bailarinapreparadaapp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Current IP Address
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Add IP to SQL firewall
        run: az sql server firewall-rule create --resource-group bailarina-preparada-app --server bailarinapreparadaappserver --name ghactions --start-ip-address ${{ steps.ip.outputs.ipv4 }} --end-ip-address ${{ steps.ip.outputs.ipv4 }}

      - name: Install EF Core CLI
        run: dotnet tool install --global dotnet-ef

      - name: Build project
        run: dotnet build --configuration Release
        working-directory: BailarinaPreparadaApp

      - name: Run EF Core migrations
        run: dotnet ef database update --project ./BailarinaPreparadaApp.csproj
        working-directory: BailarinaPreparadaApp
        env:
          ConnectionStrings__DefaultConnection: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
          JwtKey: ${{ secrets.JwtKey }}
          Smtp__Host: ${{ secrets.Smtp__Host }}
          Smtp__Port: ${{ secrets.Smtp__Port }}
          Smtp__UserName: ${{ secrets.Smtp__UserName }}
          Smtp__Password: ${{ secrets.Smtp__Password }}
          AdminSettings__AdminEmails__0: ${{ secrets.AdminSettings__AdminEmails__0 }}
          AdminSettings__AdminEmails__1: ${{ secrets.AdminSettings__AdminEmails__1 }}

      - name: Publish app
        run: dotnet publish -c Release -o ../backend-release
        working-directory: BailarinaPreparadaApp

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-app
          path: backend-release

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-app

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'bailarinapreparadaapp'
          package: ./backend-app
